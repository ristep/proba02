[{"/home/riste/Dev/react/proba02/src/pages/epic.jsx":"1","/home/riste/Dev/react/proba02/src/elements/btnlink.jsx":"2","/home/riste/Dev/react/proba02/src/reportWebVitals.js":"3","/home/riste/Dev/react/proba02/src/pages/home.jsx":"4","/home/riste/Dev/react/proba02/src/index.js":"5","/home/riste/Dev/react/proba02/src/pages/apod.jsx":"6","/home/riste/Dev/react/proba02/src/pages/about.jsx":"7","/home/riste/Dev/react/proba02/src/elements/navlink.jsx":"8","/home/riste/Dev/react/proba02/src/App.jsx":"9"},{"size":4891,"mtime":1612862748904,"results":"10","hashOfConfig":"11"},{"size":319,"mtime":1611871043633,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611673417233,"results":"13","hashOfConfig":"11"},{"size":771,"mtime":1612806527757,"results":"14","hashOfConfig":"11"},{"size":500,"mtime":1611771549442,"results":"15","hashOfConfig":"11"},{"size":1698,"mtime":1612864804742,"results":"16","hashOfConfig":"11"},{"size":796,"mtime":1612805117614,"results":"17","hashOfConfig":"11"},{"size":285,"mtime":1611871027263,"results":"18","hashOfConfig":"11"},{"size":1555,"mtime":1612708201980,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"qx1tiv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/riste/Dev/react/proba02/src/pages/epic.jsx",["41"],"import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport moment from \"moment\";\n\nimport { Button, ButtonGroup, Col, Container, Dropdown, DropdownButton, Image, Row } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nexport const Epic = () => {\n  const { year = moment().format('YYYY'), month = moment().format('MM'), day=moment().format('DD'), ndx=0 } = useParams();\n  \n  const [epicDayList, setEpicDayList] = useState([]);\n  const [filtList, setFiltList] = useState([]);\n  const [photoList, setPhotoList] = useState([]);\n  \n  const history = useHistory();\n  const historyPush = (yy, mm, dd, ii) => {\n    history.push(\"/epic/\" + yy + \"/\" + mm + \"/\" + dd + '/' + ii);\n  };\n\n  const photoUri = (type,ndx) => {\n    const ext = type==='png' ? '.png' : '.jpg'; \n    if(photoList[ndx]) \n      return 'https://epic.gsfc.nasa.gov/archive/natural/' + year + '/' + month + '/' + day + '/'+type+'/epic_1b_' + photoList[ndx].identifier + ext;\n    return '';  \n  };\n\n  useEffect(() => {\n    axios.get(`https://api.nasa.gov/EPIC/api/natural/available?api_key=14kQ7Rt7juZFOot4zYe0Tacjt0Z7s66H3MjEbdRU`)\n      .then(res => {\n        setEpicDayList(res.data);\n      }); \n  }, []);\n\n  useEffect(() => {\n    setFiltList(epicDayList.filter(ym => ym.startsWith(year + '-' + month + '-')));\n  }, [year, month, epicDayList]);\n\n  useEffect(() => {\n    axios.get('https://api.nasa.gov/EPIC/api/natural/date/' + year + '-' + month + '-' + day + '?api_key=14kQ7Rt7juZFOot4zYe0Tacjt0Z7s66H3MjEbdRU')\n      .then(res => {\n        setPhotoList(res.data);\n      });\n  }, [year, month, day]);\n\n  return (\n    <div>\n\n      <Container style={{ padding: '1em' }}>\n        <Row>\n          <Col>\n            <h1>EPIC images on {year + '-' + month + '-' + day}</h1>\n          </Col>\n          <Col>\n            <ButtonGroup>\n              <DropdownButton onSelect={(yy) => historyPush(yy,month,day, ndx)} as={ButtonGroup} title={\"Year - \" + year} id=\"bg-nested-dropdown\">\n                <Dropdown.Item eventKey=\"2015\">2015</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2016\">2016</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2017\">2017</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2018\">2018</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2019\">2019</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2020\">2020</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2021\">2021</Dropdown.Item>\n              </DropdownButton>\n              <DropdownButton onSelect={(mm) => historyPush(year, mm, day, ndx)} as={ButtonGroup} title={\"month - \" + month} id=\"bg-nested-dropdown\">\n                <Dropdown.Item eventKey=\"01\">January</Dropdown.Item>\n                <Dropdown.Item eventKey=\"02\">February</Dropdown.Item>\n                <Dropdown.Item eventKey=\"03\">March</Dropdown.Item>\n                <Dropdown.Item eventKey=\"04\">April</Dropdown.Item>\n                <Dropdown.Item eventKey=\"05\">May</Dropdown.Item>\n                <Dropdown.Item eventKey=\"06\">June</Dropdown.Item>\n                <Dropdown.Item eventKey=\"07\">July</Dropdown.Item>\n                <Dropdown.Item eventKey=\"08\">August</Dropdown.Item>\n                <Dropdown.Item eventKey=\"09\">September</Dropdown.Item>\n                <Dropdown.Item eventKey=\"10\">October</Dropdown.Item>\n                <Dropdown.Item eventKey=\"11\">November</Dropdown.Item>\n                <Dropdown.Item eventKey=\"12\">December</Dropdown.Item>\n              </DropdownButton>\n              <DropdownButton onSelect={(dd) => historyPush(year,month,dd,ndx)} as={ButtonGroup} title={\"day - \" + day} id=\"bg-nested-dropdown\">\n                {filtList.map((dd, key) => (\n                  <Dropdown.Item id={key} eventKey={dd.substr(dd.length - 2)} >\n                    {dd}\n                  </Dropdown.Item>\n                ))}\n              </DropdownButton>\n            </ButtonGroup>\n          </Col>\n        </Row>\n        <Row style={{ paddingTop: '1em' }}>\n          <Col>\n          {photoList.map((pd, key) => (\n            <Button variant={ key!==ndx ? 'light' : 'primary'} style={{ padding: '0.4em' }} onClick={() => historyPush(year,month,day,key)} id={key}>\n              <Image src={photoUri('thumbs',key)} style={{ maxWidth: '60px' }} rounded />\n              {/* <Image src={'https://epic.gsfc.nasa.gov/archive/natural/' + year + '/' + month + '/' + day + '/thumbs/epic_1b_' + pd.identifier + '.jpg'} style={{ maxWidth: '60px' }} rounded /> */}\n            </Button>\n          ))}\n        </Col>\n        </Row>\n        <Row style={{ paddingTop: '1em' }}>\n          <Col>\n            <Button onClick={() => window.open(photoUri('png',ndx), '_blank')} variant=\"light\" style={{ padding: '0.4em' }}>\n              <img src={photoUri('jpg',ndx)} alt='Photo...' />\n            </Button>\n          </Col>\n        </Row>\n      </Container> \n\n    </div>\n  );\n}\n","/home/riste/Dev/react/proba02/src/elements/btnlink.jsx",[],"/home/riste/Dev/react/proba02/src/reportWebVitals.js",[],["42","43"],"/home/riste/Dev/react/proba02/src/pages/home.jsx",[],"/home/riste/Dev/react/proba02/src/index.js",[],["44","45"],"/home/riste/Dev/react/proba02/src/pages/apod.jsx",[],"/home/riste/Dev/react/proba02/src/pages/about.jsx",[],"/home/riste/Dev/react/proba02/src/elements/navlink.jsx",[],"/home/riste/Dev/react/proba02/src/App.jsx",[],{"ruleId":"46","severity":1,"message":"47","line":101,"column":15,"nodeType":"48","endLine":101,"endColumn":63},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-global-assign","no-unsafe-negation"]